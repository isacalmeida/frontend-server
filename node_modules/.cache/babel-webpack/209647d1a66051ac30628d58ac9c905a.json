{"ast":null,"code":"import _classCallCheck from \"C:/Documentos/workspaces/isac/frontend-server/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Documentos/workspaces/isac/frontend-server/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Directive, ElementRef, NgZone, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng/dom';\n\nvar Tooltip = /*#__PURE__*/function () {\n  function Tooltip(el, zone) {\n    _classCallCheck(this, Tooltip);\n\n    this.el = el;\n    this.zone = zone;\n    this.tooltipPosition = 'right';\n    this.tooltipEvent = 'hover';\n    this.appendTo = 'body';\n    this.tooltipZIndex = 'auto';\n    this.escape = true;\n  }\n\n  _createClass(Tooltip, [{\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this = this;\n\n      this.zone.runOutsideAngular(function () {\n        if (_this.tooltipEvent === 'hover') {\n          _this.mouseEnterListener = _this.onMouseEnter.bind(_this);\n          _this.mouseLeaveListener = _this.onMouseLeave.bind(_this);\n          _this.clickListener = _this.onClick.bind(_this);\n\n          _this.el.nativeElement.addEventListener('mouseenter', _this.mouseEnterListener);\n\n          _this.el.nativeElement.addEventListener('mouseleave', _this.mouseLeaveListener);\n\n          _this.el.nativeElement.addEventListener('click', _this.clickListener);\n        } else if (_this.tooltipEvent === 'focus') {\n          _this.focusListener = _this.onFocus.bind(_this);\n          _this.blurListener = _this.onBlur.bind(_this);\n\n          _this.el.nativeElement.addEventListener('focus', _this.focusListener);\n\n          _this.el.nativeElement.addEventListener('blur', _this.blurListener);\n        }\n      });\n    }\n  }, {\n    key: \"onMouseEnter\",\n    value: function onMouseEnter(e) {\n      if (!this.container && !this.showTimeout) {\n        this.activate();\n      }\n    }\n  }, {\n    key: \"onMouseLeave\",\n    value: function onMouseLeave(e) {\n      this.deactivate();\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus(e) {\n      this.activate();\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur(e) {\n      this.deactivate();\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(e) {\n      this.deactivate();\n    }\n  }, {\n    key: \"activate\",\n    value: function activate() {\n      var _this2 = this;\n\n      this.active = true;\n      this.clearHideTimeout();\n      if (this.showDelay) this.showTimeout = setTimeout(function () {\n        _this2.show();\n      }, this.showDelay);else this.show();\n\n      if (this.life) {\n        var duration = this.showDelay ? this.life + this.showDelay : this.life;\n        this.hideTimeout = setTimeout(function () {\n          _this2.hide();\n        }, duration);\n      }\n    }\n  }, {\n    key: \"deactivate\",\n    value: function deactivate() {\n      var _this3 = this;\n\n      this.active = false;\n      this.clearShowTimeout();\n\n      if (this.hideDelay) {\n        this.clearHideTimeout(); //life timeout\n\n        this.hideTimeout = setTimeout(function () {\n          _this3.hide();\n        }, this.hideDelay);\n      } else {\n        this.hide();\n      }\n    }\n  }, {\n    key: \"create\",\n    value: function create() {\n      if (this.container) {\n        this.clearHideTimeout();\n        this.remove();\n      }\n\n      this.container = document.createElement('div');\n      var tooltipArrow = document.createElement('div');\n      tooltipArrow.className = 'p-tooltip-arrow';\n      this.container.appendChild(tooltipArrow);\n      this.tooltipText = document.createElement('div');\n      this.tooltipText.className = 'p-tooltip-text';\n      this.updateText();\n\n      if (this.positionStyle) {\n        this.container.style.position = this.positionStyle;\n      }\n\n      this.container.appendChild(this.tooltipText);\n      if (this.appendTo === 'body') document.body.appendChild(this.container);else if (this.appendTo === 'target') DomHandler.appendChild(this.container, this.el.nativeElement);else DomHandler.appendChild(this.container, this.appendTo);\n      this.container.style.display = 'inline-block';\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      if (!this.text || this.disabled) {\n        return;\n      }\n\n      this.create();\n      this.align();\n      DomHandler.fadeIn(this.container, 250);\n      if (this.tooltipZIndex === 'auto') this.container.style.zIndex = ++DomHandler.zindex;else this.container.style.zIndex = this.tooltipZIndex;\n      this.bindDocumentResizeListener();\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.remove();\n    }\n  }, {\n    key: \"updateText\",\n    value: function updateText() {\n      if (this.escape) {\n        this.tooltipText.innerHTML = '';\n        this.tooltipText.appendChild(document.createTextNode(this._text));\n      } else {\n        this.tooltipText.innerHTML = this._text;\n      }\n    }\n  }, {\n    key: \"align\",\n    value: function align() {\n      var position = this.tooltipPosition;\n\n      switch (position) {\n        case 'top':\n          this.alignTop();\n\n          if (this.isOutOfBounds()) {\n            this.alignBottom();\n\n            if (this.isOutOfBounds()) {\n              this.alignRight();\n\n              if (this.isOutOfBounds()) {\n                this.alignLeft();\n              }\n            }\n          }\n\n          break;\n\n        case 'bottom':\n          this.alignBottom();\n\n          if (this.isOutOfBounds()) {\n            this.alignTop();\n\n            if (this.isOutOfBounds()) {\n              this.alignRight();\n\n              if (this.isOutOfBounds()) {\n                this.alignLeft();\n              }\n            }\n          }\n\n          break;\n\n        case 'left':\n          this.alignLeft();\n\n          if (this.isOutOfBounds()) {\n            this.alignRight();\n\n            if (this.isOutOfBounds()) {\n              this.alignTop();\n\n              if (this.isOutOfBounds()) {\n                this.alignBottom();\n              }\n            }\n          }\n\n          break;\n\n        case 'right':\n          this.alignRight();\n\n          if (this.isOutOfBounds()) {\n            this.alignLeft();\n\n            if (this.isOutOfBounds()) {\n              this.alignTop();\n\n              if (this.isOutOfBounds()) {\n                this.alignBottom();\n              }\n            }\n          }\n\n          break;\n      }\n    }\n  }, {\n    key: \"getHostOffset\",\n    value: function getHostOffset() {\n      if (this.appendTo === 'body' || this.appendTo === 'target') {\n        var offset = this.el.nativeElement.getBoundingClientRect();\n        var targetLeft = offset.left + DomHandler.getWindowScrollLeft();\n        var targetTop = offset.top + DomHandler.getWindowScrollTop();\n        return {\n          left: targetLeft,\n          top: targetTop\n        };\n      } else {\n        return {\n          left: 0,\n          top: 0\n        };\n      }\n    }\n  }, {\n    key: \"alignRight\",\n    value: function alignRight() {\n      this.preAlign('right');\n      var hostOffset = this.getHostOffset();\n      var left = hostOffset.left + DomHandler.getOuterWidth(this.el.nativeElement);\n      var top = hostOffset.top + (DomHandler.getOuterHeight(this.el.nativeElement) - DomHandler.getOuterHeight(this.container)) / 2;\n      this.container.style.left = left + 'px';\n      this.container.style.top = top + 'px';\n    }\n  }, {\n    key: \"alignLeft\",\n    value: function alignLeft() {\n      this.preAlign('left');\n      var hostOffset = this.getHostOffset();\n      var left = hostOffset.left - DomHandler.getOuterWidth(this.container);\n      var top = hostOffset.top + (DomHandler.getOuterHeight(this.el.nativeElement) - DomHandler.getOuterHeight(this.container)) / 2;\n      this.container.style.left = left + 'px';\n      this.container.style.top = top + 'px';\n    }\n  }, {\n    key: \"alignTop\",\n    value: function alignTop() {\n      this.preAlign('top');\n      var hostOffset = this.getHostOffset();\n      var left = hostOffset.left + (DomHandler.getOuterWidth(this.el.nativeElement) - DomHandler.getOuterWidth(this.container)) / 2;\n      var top = hostOffset.top - DomHandler.getOuterHeight(this.container);\n      this.container.style.left = left + 'px';\n      this.container.style.top = top + 'px';\n    }\n  }, {\n    key: \"alignBottom\",\n    value: function alignBottom() {\n      this.preAlign('bottom');\n      var hostOffset = this.getHostOffset();\n      var left = hostOffset.left + (DomHandler.getOuterWidth(this.el.nativeElement) - DomHandler.getOuterWidth(this.container)) / 2;\n      var top = hostOffset.top + DomHandler.getOuterHeight(this.el.nativeElement);\n      this.container.style.left = left + 'px';\n      this.container.style.top = top + 'px';\n    }\n  }, {\n    key: \"preAlign\",\n    value: function preAlign(position) {\n      this.container.style.left = -999 + 'px';\n      this.container.style.top = -999 + 'px';\n      var defaultClassName = 'p-tooltip p-component p-tooltip-' + position;\n      this.container.className = this.tooltipStyleClass ? defaultClassName + ' ' + this.tooltipStyleClass : defaultClassName;\n    }\n  }, {\n    key: \"isOutOfBounds\",\n    value: function isOutOfBounds() {\n      var offset = this.container.getBoundingClientRect();\n      var targetTop = offset.top;\n      var targetLeft = offset.left;\n      var width = DomHandler.getOuterWidth(this.container);\n      var height = DomHandler.getOuterHeight(this.container);\n      var viewport = DomHandler.getViewport();\n      return targetLeft + width > viewport.width || targetLeft < 0 || targetTop < 0 || targetTop + height > viewport.height;\n    }\n  }, {\n    key: \"onWindowResize\",\n    value: function onWindowResize(e) {\n      this.hide();\n    }\n  }, {\n    key: \"bindDocumentResizeListener\",\n    value: function bindDocumentResizeListener() {\n      var _this4 = this;\n\n      this.zone.runOutsideAngular(function () {\n        _this4.resizeListener = _this4.onWindowResize.bind(_this4);\n        window.addEventListener('resize', _this4.resizeListener);\n      });\n    }\n  }, {\n    key: \"unbindDocumentResizeListener\",\n    value: function unbindDocumentResizeListener() {\n      if (this.resizeListener) {\n        window.removeEventListener('resize', this.resizeListener);\n        this.resizeListener = null;\n      }\n    }\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {\n      if (this.tooltipEvent === 'hover') {\n        this.el.nativeElement.removeEventListener('mouseenter', this.mouseEnterListener);\n        this.el.nativeElement.removeEventListener('mouseleave', this.mouseLeaveListener);\n        this.el.nativeElement.removeEventListener('click', this.clickListener);\n      } else if (this.tooltipEvent === 'focus') {\n        this.el.nativeElement.removeEventListener('focus', this.focusListener);\n        this.el.nativeElement.removeEventListener('blur', this.blurListener);\n      }\n\n      this.unbindDocumentResizeListener();\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      if (this.container && this.container.parentElement) {\n        if (this.appendTo === 'body') document.body.removeChild(this.container);else if (this.appendTo === 'target') this.el.nativeElement.removeChild(this.container);else DomHandler.removeChild(this.container, this.appendTo);\n      }\n\n      this.unbindDocumentResizeListener();\n      this.clearTimeouts();\n      this.container = null;\n    }\n  }, {\n    key: \"clearShowTimeout\",\n    value: function clearShowTimeout() {\n      if (this.showTimeout) {\n        clearTimeout(this.showTimeout);\n        this.showTimeout = null;\n      }\n    }\n  }, {\n    key: \"clearHideTimeout\",\n    value: function clearHideTimeout() {\n      if (this.hideTimeout) {\n        clearTimeout(this.hideTimeout);\n        this.hideTimeout = null;\n      }\n    }\n  }, {\n    key: \"clearTimeouts\",\n    value: function clearTimeouts() {\n      this.clearShowTimeout();\n      this.clearHideTimeout();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.unbindEvents();\n      this.remove();\n    }\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this._disabled;\n    },\n    set: function set(val) {\n      this._disabled = val;\n      this.deactivate();\n    }\n  }, {\n    key: \"text\",\n    get: function get() {\n      return this._text;\n    },\n    set: function set(text) {\n      this._text = text;\n\n      if (this.active) {\n        if (this._text) {\n          if (this.container && this.container.offsetParent) {\n            this.updateText();\n            this.align();\n          } else {\n            this.show();\n          }\n        } else {\n          this.hide();\n        }\n      }\n    }\n  }]);\n\n  return Tooltip;\n}();\n\nTooltip.decorators = [{\n  type: Directive,\n  args: [{\n    selector: '[pTooltip]'\n  }]\n}];\n\nTooltip.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NgZone\n  }];\n};\n\nTooltip.propDecorators = {\n  tooltipPosition: [{\n    type: Input\n  }],\n  tooltipEvent: [{\n    type: Input\n  }],\n  appendTo: [{\n    type: Input\n  }],\n  positionStyle: [{\n    type: Input\n  }],\n  tooltipStyleClass: [{\n    type: Input\n  }],\n  tooltipZIndex: [{\n    type: Input\n  }],\n  escape: [{\n    type: Input\n  }],\n  showDelay: [{\n    type: Input\n  }],\n  hideDelay: [{\n    type: Input\n  }],\n  life: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input,\n    args: [\"tooltipDisabled\"]\n  }],\n  text: [{\n    type: Input,\n    args: ['pTooltip']\n  }]\n};\n\nvar TooltipModule = function TooltipModule() {\n  _classCallCheck(this, TooltipModule);\n};\n\nTooltipModule.decorators = [{\n  type: NgModule,\n  args: [{\n    imports: [CommonModule],\n    exports: [Tooltip],\n    declarations: [Tooltip]\n  }]\n}];\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Tooltip, TooltipModule };","map":{"version":3,"sources":["../../src/app/components/tooltip/tooltip.ts","../../src/app/components/tooltip/primeng-tooltip.ts"],"names":[],"mappings":"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","sourcesContent":["import { NgModule, Directive, ElementRef, AfterViewInit, OnDestroy, Input, NgZone } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng/dom';\n\n@Directive({\n    selector: '[pTooltip]'\n})\nexport class Tooltip implements AfterViewInit, OnDestroy {\n\n    @Input() tooltipPosition: string = 'right';\n\n    @Input() tooltipEvent: string = 'hover';\n\n    @Input() appendTo: any = 'body';\n\n    @Input() positionStyle: string;\n\n    @Input() tooltipStyleClass: string;\n\n    @Input() tooltipZIndex: string = 'auto';\n\n    @Input() escape: boolean = true;\n\n    @Input() showDelay: number;\n\n    @Input() hideDelay: number;\n\n    @Input() life: number;\n\n    @Input(\"tooltipDisabled\") get disabled(): boolean {\n        return this._disabled;\n    }\n    set disabled(val:boolean) {\n        this._disabled = val;\n        this.deactivate();\n    }\n\n    _disabled: boolean;\n\n    container: any;\n\n    styleClass: string;\n\n    tooltipText: any;\n\n    showTimeout: any;\n\n    hideTimeout: any;\n\n    active: boolean;\n\n    _text: string;\n\n    mouseEnterListener: Function;\n\n    mouseLeaveListener: Function;\n\n    clickListener: Function;\n\n    focusListener: Function;\n\n    blurListener: Function;\n\n    resizeListener: any;\n\n    constructor(public el: ElementRef, public zone: NgZone) { }\n\n    ngAfterViewInit() {\n        this.zone.runOutsideAngular(() => {\n            if (this.tooltipEvent === 'hover') {\n                this.mouseEnterListener = this.onMouseEnter.bind(this);\n                this.mouseLeaveListener = this.onMouseLeave.bind(this);\n                this.clickListener = this.onClick.bind(this);\n                this.el.nativeElement.addEventListener('mouseenter', this.mouseEnterListener);\n                this.el.nativeElement.addEventListener('mouseleave', this.mouseLeaveListener);\n                this.el.nativeElement.addEventListener('click', this.clickListener);\n            }\n            else if (this.tooltipEvent === 'focus') {\n                this.focusListener = this.onFocus.bind(this);\n                this.blurListener = this.onBlur.bind(this);\n                this.el.nativeElement.addEventListener('focus', this.focusListener);\n                this.el.nativeElement.addEventListener('blur', this.blurListener);\n            }\n        });\n    }\n\n    onMouseEnter(e: Event) {\n        if (!this.container && !this.showTimeout) {\n            this.activate();\n        }\n    }\n    \n    onMouseLeave(e: Event) {\n        this.deactivate();\n    }\n    \n    onFocus(e: Event) {\n        this.activate();\n    }\n    \n    onBlur(e: Event) {\n        this.deactivate();\n    }\n  \n    onClick(e: Event) {\n        this.deactivate();\n    }\n\n    activate() {\n        this.active = true;\n        this.clearHideTimeout();\n\n        if (this.showDelay)\n            this.showTimeout = setTimeout(() => { this.show() }, this.showDelay);\n        else\n            this.show();\n\n        if (this.life) {\n            let duration = this.showDelay ? this.life + this.showDelay : this.life;\n            this.hideTimeout = setTimeout(() => { this.hide() }, duration);\n        }\n    }\n\n    deactivate() {\n        this.active = false;\n        this.clearShowTimeout();\n\n        if (this.hideDelay) {\n            this.clearHideTimeout();    //life timeout\n            this.hideTimeout = setTimeout(() => { this.hide() }, this.hideDelay);\n        }\n        else {\n            this.hide();\n        }\n    }\n\n    get text(): string {\n        return this._text;\n    }\n\n    @Input('pTooltip') set text(text: string) {\n        this._text = text;\n        if (this.active) {\n            if (this._text) {\n                if (this.container && this.container.offsetParent) {\n                    this.updateText();\n\t\t\t\t\tthis.align();\n\t\t\t\t}\n                else {\n                    this.show();\n                }\n            }\n            else {\n                this.hide();\n            }\n        }\n    }\n\n    create() {\n        if (this.container) {\n            this.clearHideTimeout();\n            this.remove();\n        }\n\n        this.container = document.createElement('div');\n\n        let tooltipArrow = document.createElement('div');\n        tooltipArrow.className = 'p-tooltip-arrow';\n        this.container.appendChild(tooltipArrow);\n\n        this.tooltipText = document.createElement('div');\n        this.tooltipText.className = 'p-tooltip-text';\n\n        this.updateText();\n\n        if (this.positionStyle) {\n            this.container.style.position = this.positionStyle;\n        }\n\n        this.container.appendChild(this.tooltipText);\n\n        if (this.appendTo === 'body')\n            document.body.appendChild(this.container);\n        else if (this.appendTo === 'target')\n            DomHandler.appendChild(this.container, this.el.nativeElement);\n        else\n            DomHandler.appendChild(this.container, this.appendTo);\n\n        this.container.style.display = 'inline-block';\n    }\n\n    show() {\n        if (!this.text || this.disabled) {\n            return;\n        }\n\n        this.create();\n        this.align();\n        DomHandler.fadeIn(this.container, 250);\n\n        if (this.tooltipZIndex === 'auto')\n            this.container.style.zIndex = ++DomHandler.zindex;\n        else\n            this.container.style.zIndex = this.tooltipZIndex;\n\n        this.bindDocumentResizeListener();\n    }\n\n    hide() {\n        this.remove();\n    }\n\n    updateText() {\n        if (this.escape) {\n            this.tooltipText.innerHTML = '';\n            this.tooltipText.appendChild(document.createTextNode(this._text));\n        }\n        else {\n            this.tooltipText.innerHTML = this._text;\n        }\n    }\n\n    align() {\n        let position = this.tooltipPosition;\n\n        switch (position) {\n            case 'top':\n                this.alignTop();\n                if (this.isOutOfBounds()) {\n                    this.alignBottom();\n                    if (this.isOutOfBounds()) {\n                        this.alignRight();\n\n                        if (this.isOutOfBounds()) {\n                            this.alignLeft();\n                        }\n                    }\n                }\n                break;\n\n            case 'bottom':\n                this.alignBottom();\n                if (this.isOutOfBounds()) {\n                    this.alignTop();\n                    if (this.isOutOfBounds()) {\n                        this.alignRight();\n\n                        if (this.isOutOfBounds()) {\n                            this.alignLeft();\n                        }\n                    }\n                }\n                break;\n\n            case 'left':\n                this.alignLeft();\n                if (this.isOutOfBounds()) {\n                    this.alignRight();\n\n                    if (this.isOutOfBounds()) {\n                        this.alignTop();\n\n                        if (this.isOutOfBounds()) {\n                            this.alignBottom();\n                        }\n                    }\n                }\n                break;\n\n            case 'right':\n                this.alignRight();\n                if (this.isOutOfBounds()) {\n                    this.alignLeft();\n\n                    if (this.isOutOfBounds()) {\n                        this.alignTop();\n\n                        if (this.isOutOfBounds()) {\n                            this.alignBottom();\n                        }\n                    }\n                }\n                break;\n        }\n    }\n\n    getHostOffset() {\n        if (this.appendTo === 'body' || this.appendTo === 'target') {\n            let offset = this.el.nativeElement.getBoundingClientRect();\n            let targetLeft = offset.left + DomHandler.getWindowScrollLeft();\n            let targetTop = offset.top + DomHandler.getWindowScrollTop();\n    \n            return { left: targetLeft, top: targetTop };\n        }\n        else {\n            return { left: 0, top: 0 };\n        }\n    }\n\n    alignRight() {\n        this.preAlign('right');\n        let hostOffset = this.getHostOffset();\n        let left = hostOffset.left + DomHandler.getOuterWidth(this.el.nativeElement);\n        let top = hostOffset.top + (DomHandler.getOuterHeight(this.el.nativeElement) - DomHandler.getOuterHeight(this.container)) / 2;\n        this.container.style.left = left + 'px';\n        this.container.style.top = top + 'px';\n    }\n\n    alignLeft() {\n        this.preAlign('left');\n        let hostOffset = this.getHostOffset();\n        let left = hostOffset.left - DomHandler.getOuterWidth(this.container);\n        let top = hostOffset.top + (DomHandler.getOuterHeight(this.el.nativeElement) - DomHandler.getOuterHeight(this.container)) / 2;\n        this.container.style.left = left + 'px';\n        this.container.style.top = top + 'px';\n    }\n\n    alignTop() {\n        this.preAlign('top');\n        let hostOffset = this.getHostOffset();\n        let left = hostOffset.left + (DomHandler.getOuterWidth(this.el.nativeElement) - DomHandler.getOuterWidth(this.container)) / 2;\n        let top = hostOffset.top - DomHandler.getOuterHeight(this.container);\n        this.container.style.left = left + 'px';\n        this.container.style.top = top + 'px';\n    }\n\n    alignBottom() {\n        this.preAlign('bottom');\n        let hostOffset = this.getHostOffset();\n        let left = hostOffset.left + (DomHandler.getOuterWidth(this.el.nativeElement) - DomHandler.getOuterWidth(this.container)) / 2;\n        let top = hostOffset.top + DomHandler.getOuterHeight(this.el.nativeElement);\n        this.container.style.left = left + 'px';\n        this.container.style.top = top + 'px';\n    }\n\n    preAlign(position: string) {\n        this.container.style.left = -999 + 'px';\n        this.container.style.top = -999 + 'px';\n\n        let defaultClassName = 'p-tooltip p-component p-tooltip-' + position;\n        this.container.className = this.tooltipStyleClass ? defaultClassName + ' ' + this.tooltipStyleClass : defaultClassName;\n    }\n\n    isOutOfBounds(): boolean {\n        let offset = this.container.getBoundingClientRect();\n        let targetTop = offset.top;\n        let targetLeft = offset.left;\n        let width = DomHandler.getOuterWidth(this.container);\n        let height = DomHandler.getOuterHeight(this.container);\n        let viewport = DomHandler.getViewport();\n\n        return (targetLeft + width > viewport.width) || (targetLeft < 0) || (targetTop < 0) || (targetTop + height > viewport.height);\n    }\n\n    onWindowResize(e: Event) {\n        this.hide();\n    }\n\n    bindDocumentResizeListener() {\n        this.zone.runOutsideAngular(() => {\n            this.resizeListener = this.onWindowResize.bind(this);\n            window.addEventListener('resize', this.resizeListener);\n        });\n    }\n\n    unbindDocumentResizeListener() {\n        if (this.resizeListener) {\n            window.removeEventListener('resize', this.resizeListener);\n            this.resizeListener = null;\n        }\n    }\n\n    unbindEvents() {\n        if (this.tooltipEvent === 'hover') {\n            this.el.nativeElement.removeEventListener('mouseenter', this.mouseEnterListener);\n            this.el.nativeElement.removeEventListener('mouseleave', this.mouseLeaveListener);\n            this.el.nativeElement.removeEventListener('click', this.clickListener);\n        }\n        else if (this.tooltipEvent === 'focus') {\n            this.el.nativeElement.removeEventListener('focus', this.focusListener);\n            this.el.nativeElement.removeEventListener('blur', this.blurListener);\n        }\n\n        this.unbindDocumentResizeListener();\n    }\n\n    remove() {\n        if (this.container && this.container.parentElement) {\n            if (this.appendTo === 'body')\n                document.body.removeChild(this.container);\n            else if (this.appendTo === 'target')\n                this.el.nativeElement.removeChild(this.container);\n            else\n                DomHandler.removeChild(this.container, this.appendTo);\n        }\n\n        this.unbindDocumentResizeListener();\n        this.clearTimeouts();\n        this.container = null;\n    }\n\n    clearShowTimeout() {\n        if (this.showTimeout) {\n            clearTimeout(this.showTimeout);\n            this.showTimeout = null;\n        }\n    }\n\n    clearHideTimeout() {\n        if (this.hideTimeout) {\n            clearTimeout(this.hideTimeout);\n            this.hideTimeout = null;\n        }\n    }\n\n    clearTimeouts() {\n        this.clearShowTimeout();\n        this.clearHideTimeout();\n    }\n\n    ngOnDestroy() {\n        this.unbindEvents();\n        this.remove();\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Tooltip],\n    declarations: [Tooltip]\n})\nexport class TooltipModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}