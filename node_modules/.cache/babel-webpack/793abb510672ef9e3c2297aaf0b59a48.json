{"ast":null,"code":"import _classCallCheck from \"C:/Documentos/workspaces/isac/frontend-server/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Documentos/workspaces/isac/frontend-server/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Renderer2, NgZone, ChangeDetectorRef, Input, ContentChild, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { animation, style, animate, trigger, transition, useAnimation } from '@angular/animations';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng/dom';\nimport { ConfirmationService, Footer, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nvar showAnimation = animation([style({\n  transform: '{{transform}}',\n  opacity: 0\n}), animate('{{transition}}', style({\n  transform: 'none',\n  opacity: 1\n}))]);\nvar hideAnimation = animation([animate('{{transition}}', style({\n  transform: '{{transform}}',\n  opacity: 0\n}))]);\n\nvar ConfirmDialog = /*#__PURE__*/function () {\n  function ConfirmDialog(el, renderer, confirmationService, zone, cd) {\n    var _this = this;\n\n    _classCallCheck(this, ConfirmDialog);\n\n    this.el = el;\n    this.renderer = renderer;\n    this.confirmationService = confirmationService;\n    this.zone = zone;\n    this.cd = cd;\n    this.acceptIcon = 'pi pi-check';\n    this.acceptLabel = 'Yes';\n    this.acceptVisible = true;\n    this.rejectIcon = 'pi pi-times';\n    this.rejectLabel = 'No';\n    this.rejectVisible = true;\n    this.closeOnEscape = true;\n    this.blockScroll = true;\n    this.closable = true;\n    this.autoZIndex = true;\n    this.baseZIndex = 0;\n    this.transitionOptions = '150ms cubic-bezier(0, 0, 0.2, 1)';\n    this.focusTrap = true;\n    this.defaultFocus = 'accept';\n    this._position = \"center\";\n    this.transformOptions = \"scale(0.7)\";\n    this.subscription = this.confirmationService.requireConfirmation$.subscribe(function (confirmation) {\n      if (!confirmation) {\n        _this.hide();\n\n        return;\n      }\n\n      if (confirmation.key === _this.key) {\n        _this.confirmation = confirmation;\n        _this.confirmationOptions = {\n          message: _this.confirmation.message || _this.message,\n          icon: _this.confirmation.icon || _this.icon,\n          header: _this.confirmation.header || _this.header,\n          rejectVisible: _this.confirmation.rejectVisible == null ? _this.rejectVisible : _this.confirmation.rejectVisible,\n          acceptVisible: _this.confirmation.acceptVisible == null ? _this.acceptVisible : _this.confirmation.acceptVisible,\n          acceptLabel: _this.confirmation.acceptLabel || _this.acceptLabel,\n          rejectLabel: _this.confirmation.rejectLabel || _this.rejectLabel,\n          acceptIcon: _this.confirmation.acceptIcon || _this.acceptIcon,\n          rejectIcon: _this.confirmation.rejectIcon || _this.rejectIcon,\n          acceptButtonStyleClass: _this.confirmation.acceptButtonStyleClass || _this.acceptButtonStyleClass,\n          rejectButtonStyleClass: _this.confirmation.rejectButtonStyleClass || _this.rejectButtonStyleClass,\n          defaultFocus: _this.confirmation.defaultFocus || _this.defaultFocus,\n          blockScroll: _this.confirmation.blockScroll === false || _this.confirmation.blockScroll === true ? _this.confirmation.blockScroll : _this.blockScroll\n        };\n\n        if (_this.confirmation.accept) {\n          _this.confirmation.acceptEvent = new EventEmitter();\n\n          _this.confirmation.acceptEvent.subscribe(_this.confirmation.accept);\n        }\n\n        if (_this.confirmation.reject) {\n          _this.confirmation.rejectEvent = new EventEmitter();\n\n          _this.confirmation.rejectEvent.subscribe(_this.confirmation.reject);\n        }\n\n        _this.visible = true;\n      }\n    });\n  }\n\n  _createClass(ConfirmDialog, [{\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this2 = this;\n\n      this.templates.forEach(function (item) {\n        switch (item.getType()) {\n          case 'footerTemplate':\n            _this2.footerTemplate = item.template;\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"option\",\n    value: function option(name) {\n      var source = this.confirmationOptions || this;\n\n      if (source.hasOwnProperty(name)) {\n        return source[name];\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"onAnimationStart\",\n    value: function onAnimationStart(event) {\n      switch (event.toState) {\n        case 'visible':\n          this.container = event.element;\n          this.wrapper = this.container.parentElement;\n          this.contentContainer = DomHandler.findSingle(this.container, '.p-dialog-content');\n          var element = this.getElementToFocus();\n\n          if (element) {\n            element.focus();\n          }\n\n          this.appendContainer();\n          this.moveOnTop();\n          this.bindGlobalListeners();\n          this.enableModality();\n          break;\n      }\n    }\n  }, {\n    key: \"onAnimationEnd\",\n    value: function onAnimationEnd(event) {\n      switch (event.toState) {\n        case 'void':\n          this.onOverlayHide();\n          break;\n      }\n    }\n  }, {\n    key: \"getElementToFocus\",\n    value: function getElementToFocus() {\n      switch (this.option('defaultFocus')) {\n        case 'accept':\n          return DomHandler.findSingle(this.container, '.p-confirm-dialog-accept');\n\n        case 'reject':\n          return DomHandler.findSingle(this.container, '.p-confirm-dialog-reject');\n\n        case 'close':\n          return DomHandler.findSingle(this.container, '.p-dialog-header-close');\n\n        case 'none':\n          return null;\n        //backward compatibility\n\n        default:\n          return DomHandler.findSingle(this.container, '.p-confirm-dialog-accept');\n      }\n    }\n  }, {\n    key: \"appendContainer\",\n    value: function appendContainer() {\n      if (this.appendTo) {\n        if (this.appendTo === 'body') document.body.appendChild(this.wrapper);else DomHandler.appendChild(this.wrapper, this.appendTo);\n      }\n    }\n  }, {\n    key: \"restoreAppend\",\n    value: function restoreAppend() {\n      if (this.wrapper && this.appendTo) {\n        this.el.nativeElement.appendChild(this.wrapper);\n      }\n    }\n  }, {\n    key: \"enableModality\",\n    value: function enableModality() {\n      if (this.option('blockScroll')) {\n        DomHandler.addClass(document.body, 'p-overflow-hidden');\n      }\n    }\n  }, {\n    key: \"disableModality\",\n    value: function disableModality() {\n      this.maskVisible = false;\n\n      if (this.option('blockScroll')) {\n        DomHandler.removeClass(document.body, 'p-overflow-hidden');\n      }\n\n      if (this.container) {\n        this.cd.detectChanges();\n      }\n    }\n  }, {\n    key: \"close\",\n    value: function close(event) {\n      if (this.confirmation.rejectEvent) {\n        this.confirmation.rejectEvent.emit();\n      }\n\n      this.hide();\n      event.preventDefault();\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.visible = false;\n      this.confirmation = null;\n      this.confirmationOptions = null;\n    }\n  }, {\n    key: \"moveOnTop\",\n    value: function moveOnTop() {\n      if (this.autoZIndex) {\n        this.container.style.zIndex = String(this.baseZIndex + ++DomHandler.zindex);\n        this.wrapper.style.zIndex = String(this.baseZIndex + (DomHandler.zindex - 1));\n      }\n    }\n  }, {\n    key: \"getMaskClass\",\n    value: function getMaskClass() {\n      var maskClass = {\n        'p-dialog-mask p-component-overlay': true,\n        'p-dialog-mask-scrollblocker': this.blockScroll\n      };\n      maskClass[this.getPositionClass().toString()] = true;\n      return maskClass;\n    }\n  }, {\n    key: \"getPositionClass\",\n    value: function getPositionClass() {\n      var _this3 = this;\n\n      var positions = ['left', 'right', 'top', 'topleft', 'topright', 'bottom', 'bottomleft', 'bottomright'];\n      var pos = positions.find(function (item) {\n        return item === _this3.position;\n      });\n      return pos ? \"p-dialog-\".concat(pos) : '';\n    }\n  }, {\n    key: \"bindGlobalListeners\",\n    value: function bindGlobalListeners() {\n      var _this4 = this;\n\n      if (this.closeOnEscape && this.closable || this.focusTrap && !this.documentEscapeListener) {\n        var documentTarget = this.el ? this.el.nativeElement.ownerDocument : 'document';\n        this.documentEscapeListener = this.renderer.listen(documentTarget, 'keydown', function (event) {\n          if (event.which == 27 && _this4.closeOnEscape && _this4.closable) {\n            if (parseInt(_this4.container.style.zIndex) === DomHandler.zindex + _this4.baseZIndex && _this4.visible) {\n              _this4.close(event);\n            }\n          }\n\n          if (event.which === 9 && _this4.focusTrap) {\n            event.preventDefault();\n            var focusableElements = DomHandler.getFocusableElements(_this4.container);\n\n            if (focusableElements && focusableElements.length > 0) {\n              if (!focusableElements[0].ownerDocument.activeElement) {\n                focusableElements[0].focus();\n              } else {\n                var focusedIndex = focusableElements.indexOf(focusableElements[0].ownerDocument.activeElement);\n\n                if (event.shiftKey) {\n                  if (focusedIndex == -1 || focusedIndex === 0) focusableElements[focusableElements.length - 1].focus();else focusableElements[focusedIndex - 1].focus();\n                } else {\n                  if (focusedIndex == -1 || focusedIndex === focusableElements.length - 1) focusableElements[0].focus();else focusableElements[focusedIndex + 1].focus();\n                }\n              }\n            }\n          }\n        });\n      }\n    }\n  }, {\n    key: \"unbindGlobalListeners\",\n    value: function unbindGlobalListeners() {\n      if (this.documentEscapeListener) {\n        this.documentEscapeListener();\n        this.documentEscapeListener = null;\n      }\n    }\n  }, {\n    key: \"onOverlayHide\",\n    value: function onOverlayHide() {\n      this.disableModality();\n      this.unbindGlobalListeners();\n      this.container = null;\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.restoreAppend();\n      this.onOverlayHide();\n      this.subscription.unsubscribe();\n    }\n  }, {\n    key: \"accept\",\n    value: function accept() {\n      if (this.confirmation.acceptEvent) {\n        this.confirmation.acceptEvent.emit();\n      }\n\n      this.hide();\n    }\n  }, {\n    key: \"reject\",\n    value: function reject() {\n      if (this.confirmation.rejectEvent) {\n        this.confirmation.rejectEvent.emit();\n      }\n\n      this.hide();\n    }\n  }, {\n    key: \"visible\",\n    get: function get() {\n      return this._visible;\n    },\n    set: function set(value) {\n      this._visible = value;\n\n      if (this._visible && !this.maskVisible) {\n        this.maskVisible = true;\n      }\n\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"position\",\n    get: function get() {\n      return this._position;\n    },\n    set: function set(value) {\n      this._position = value;\n\n      switch (value) {\n        case 'topleft':\n        case 'bottomleft':\n        case 'left':\n          this.transformOptions = \"translate3d(-100%, 0px, 0px)\";\n          break;\n\n        case 'topright':\n        case 'bottomright':\n        case 'right':\n          this.transformOptions = \"translate3d(100%, 0px, 0px)\";\n          break;\n\n        case 'bottom':\n          this.transformOptions = \"translate3d(0px, 100%, 0px)\";\n          break;\n\n        case 'top':\n          this.transformOptions = \"translate3d(0px, -100%, 0px)\";\n          break;\n\n        default:\n          this.transformOptions = \"scale(0.7)\";\n          break;\n      }\n    }\n  }]);\n\n  return ConfirmDialog;\n}();\n\nConfirmDialog.decorators = [{\n  type: Component,\n  args: [{\n    selector: 'p-confirmDialog',\n    template: \"\\n        <div [class]=\\\"maskStyleClass\\\" [ngClass]=\\\"getMaskClass()\\\" *ngIf=\\\"maskVisible\\\">\\n            <div [ngClass]=\\\"{'p-dialog p-confirm-dialog p-component':true,'p-dialog-rtl':rtl}\\\" [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\" (mousedown)=\\\"moveOnTop()\\\"\\n                [@animation]=\\\"{value: 'visible', params: {transform: transformOptions, transition: transitionOptions}}\\\" (@animation.start)=\\\"onAnimationStart($event)\\\" (@animation.done)=\\\"onAnimationEnd($event)\\\" *ngIf=\\\"visible\\\">\\n                <div class=\\\"p-dialog-header\\\">\\n                    <span class=\\\"p-dialog-title\\\" *ngIf=\\\"option('header')\\\">{{option('header')}}</span>\\n                    <div class=\\\"p-dialog-header-icons\\\">\\n                        <button *ngIf=\\\"closable\\\" type=\\\"button\\\" [ngClass]=\\\"{'p-dialog-header-icon p-dialog-header-close p-link':true}\\\" (click)=\\\"close($event)\\\" (keydown.enter)=\\\"close($event)\\\">\\n                            <span class=\\\"pi pi-times\\\"></span>\\n                        </button>\\n                    </div>\\n                </div>\\n                <div #content class=\\\"p-dialog-content\\\">\\n                    <i [ngClass]=\\\"'p-confirm-dialog-icon'\\\" [class]=\\\"option('icon')\\\" *ngIf=\\\"option('icon')\\\"></i>\\n                    <span class=\\\"p-confirm-dialog-message\\\" [innerHTML]=\\\"option('message')\\\"></span>\\n                </div>\\n                <div class=\\\"p-dialog-footer\\\" *ngIf=\\\"footer || footerTemplate\\\">\\n                    <ng-content select=\\\"p-footer\\\"></ng-content>\\n                    <ng-container *ngTemplateOutlet=\\\"footerTemplate\\\"></ng-container>\\n                </div>\\n                <div class=\\\"p-dialog-footer\\\" *ngIf=\\\"!footer\\\">\\n                    <button type=\\\"button\\\" pButton [icon]=\\\"option('acceptIcon')\\\" [label]=\\\"option('acceptLabel')\\\" (click)=\\\"accept()\\\" [ngClass]=\\\"'p-confirm-dialog-accept'\\\" [class]=\\\"option('acceptButtonStyleClass')\\\" *ngIf=\\\"option('acceptVisible')\\\"></button>\\n                    <button type=\\\"button\\\" pButton [icon]=\\\"option('rejectIcon')\\\" [label]=\\\"option('rejectLabel')\\\" (click)=\\\"reject()\\\" [ngClass]=\\\"'p-confirm-dialog-reject'\\\" [class]=\\\"option('rejectButtonStyleClass')\\\" *ngIf=\\\"option('rejectVisible')\\\"></button>\\n                </div>\\n            </div>\\n        </div>\\n    \",\n    animations: [trigger('animation', [transition('void => visible', [useAnimation(showAnimation)]), transition('visible => void', [useAnimation(hideAnimation)])])],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styles: [\".p-dialog-mask{-ms-flex-align:center;-ms-flex-pack:center;align-items:center;background-color:rgba(0,0,0,0);display:-ms-flexbox;display:flex;height:100%;justify-content:center;left:0;pointer-events:none;position:fixed;top:0;transition-property:background-color;width:100%}.p-dialog,.p-dialog-mask.p-component-overlay{pointer-events:auto}.p-dialog{-ms-flex-direction:column;-ms-transform:scale(1);display:-ms-flexbox;display:flex;flex-direction:column;max-height:90%;position:relative;transform:scale(1)}.p-dialog-content{overflow-y:auto}.p-dialog-header{-ms-flex-align:center;-ms-flex-pack:justify;align-items:center;display:-ms-flexbox;display:flex;justify-content:space-between}.p-dialog-title{list-style:1}.p-dialog .p-dialog-header-icon,.p-dialog .p-dialog-header-icons{-ms-flex-align:center;align-items:center;display:-ms-flexbox;display:flex}.p-dialog .p-dialog-header-icon{-ms-flex-pack:center;justify-content:center;overflow:hidden;position:relative}.p-dialog-mask.p-dialog-mask-leave{background-color:rgba(0,0,0,0)}.p-fluid .p-dialog-footer .p-button{width:auto}.p-dialog-bottom-left .p-dialog,.p-dialog-bottom-right .p-dialog,.p-dialog-bottom .p-dialog,.p-dialog-left .p-dialog,.p-dialog-right .p-dialog,.p-dialog-top-left .p-dialog,.p-dialog-top-right .p-dialog,.p-dialog-top .p-dialog{margin:.75rem;transform:translateZ(0)}.p-dialog-maximized{-ms-transform:none;height:100%;max-height:100%;transform:none;transition:none;width:100vw!important}.p-dialog-maximized .p-dialog-content{-ms-flex-positive:1;flex-grow:1}.p-dialog-left{-ms-flex-pack:start;justify-content:flex-start}.p-dialog-right{-ms-flex-pack:end;justify-content:flex-end}.p-dialog-top,.p-dialog-top-left{-ms-flex-align:start;align-items:flex-start}.p-dialog-top-left{-ms-flex-pack:start;justify-content:flex-start}.p-dialog-top-right{-ms-flex-align:start;-ms-flex-pack:end;align-items:flex-start;justify-content:flex-end}.p-dialog-bottom,.p-dialog-bottom-left{-ms-flex-align:end;align-items:flex-end}.p-dialog-bottom-left{-ms-flex-pack:start;justify-content:flex-start}.p-dialog-bottom-right{-ms-flex-align:end;-ms-flex-pack:end;align-items:flex-end;justify-content:flex-end}.p-dialog .p-resizable-handle{bottom:1px;cursor:se-resize;display:block;font-size:.1px;height:12px;position:absolute;right:1px;width:12px}.p-confirm-dialog .p-dialog-content{-ms-flex-align:center;align-items:center;display:-ms-flexbox;display:flex}\"]\n  }]\n}];\n\nConfirmDialog.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: ConfirmationService\n  }, {\n    type: NgZone\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nConfirmDialog.propDecorators = {\n  header: [{\n    type: Input\n  }],\n  icon: [{\n    type: Input\n  }],\n  message: [{\n    type: Input\n  }],\n  style: [{\n    type: Input\n  }],\n  styleClass: [{\n    type: Input\n  }],\n  maskStyleClass: [{\n    type: Input\n  }],\n  acceptIcon: [{\n    type: Input\n  }],\n  acceptLabel: [{\n    type: Input\n  }],\n  acceptVisible: [{\n    type: Input\n  }],\n  rejectIcon: [{\n    type: Input\n  }],\n  rejectLabel: [{\n    type: Input\n  }],\n  rejectVisible: [{\n    type: Input\n  }],\n  acceptButtonStyleClass: [{\n    type: Input\n  }],\n  rejectButtonStyleClass: [{\n    type: Input\n  }],\n  closeOnEscape: [{\n    type: Input\n  }],\n  blockScroll: [{\n    type: Input\n  }],\n  rtl: [{\n    type: Input\n  }],\n  closable: [{\n    type: Input\n  }],\n  appendTo: [{\n    type: Input\n  }],\n  key: [{\n    type: Input\n  }],\n  autoZIndex: [{\n    type: Input\n  }],\n  baseZIndex: [{\n    type: Input\n  }],\n  transitionOptions: [{\n    type: Input\n  }],\n  focusTrap: [{\n    type: Input\n  }],\n  defaultFocus: [{\n    type: Input\n  }],\n  visible: [{\n    type: Input\n  }],\n  position: [{\n    type: Input\n  }],\n  footer: [{\n    type: ContentChild,\n    args: [Footer]\n  }],\n  contentViewChild: [{\n    type: ViewChild,\n    args: ['content']\n  }],\n  templates: [{\n    type: ContentChildren,\n    args: [PrimeTemplate]\n  }]\n};\n\nvar ConfirmDialogModule = function ConfirmDialogModule() {\n  _classCallCheck(this, ConfirmDialogModule);\n};\n\nConfirmDialogModule.decorators = [{\n  type: NgModule,\n  args: [{\n    imports: [CommonModule, ButtonModule],\n    exports: [ConfirmDialog, ButtonModule, SharedModule],\n    declarations: [ConfirmDialog]\n  }]\n}];\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ConfirmDialog, ConfirmDialogModule };","map":{"version":3,"sources":["../../src/app/components/confirmdialog/confirmdialog.ts","../../src/app/components/confirmdialog/primeng-confirmdialog.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,ElementRef,OnDestroy,Input,EventEmitter,Renderer2,ContentChild,NgZone,ViewChild,ChangeDetectorRef,ChangeDetectionStrategy, ViewEncapsulation, ContentChildren, QueryList, TemplateRef, AfterContentInit} from '@angular/core';\nimport {trigger,style,transition,animate,AnimationEvent, useAnimation, animation} from '@angular/animations';\nimport {CommonModule} from '@angular/common';\nimport {DomHandler} from 'primeng/dom';\nimport {Footer,SharedModule, PrimeTemplate} from 'primeng/api';\nimport {ButtonModule} from 'primeng/button';\nimport {Confirmation} from 'primeng/api';\nimport {ConfirmationService} from 'primeng/api';\nimport {Subscription} from 'rxjs';\n\nconst showAnimation = animation([\n    style({ transform: '{{transform}}', opacity: 0 }),\n    animate('{{transition}}', style({ transform: 'none', opacity: 1 }))\n]);\n\nconst hideAnimation = animation([\n    animate('{{transition}}', style({ transform: '{{transform}}', opacity: 0 }))\n]);\n\n@Component({\n    selector: 'p-confirmDialog',\n    template: `\n        <div [class]=\"maskStyleClass\" [ngClass]=\"getMaskClass()\" *ngIf=\"maskVisible\">\n            <div [ngClass]=\"{'p-dialog p-confirm-dialog p-component':true,'p-dialog-rtl':rtl}\" [ngStyle]=\"style\" [class]=\"styleClass\" (mousedown)=\"moveOnTop()\"\n                [@animation]=\"{value: 'visible', params: {transform: transformOptions, transition: transitionOptions}}\" (@animation.start)=\"onAnimationStart($event)\" (@animation.done)=\"onAnimationEnd($event)\" *ngIf=\"visible\">\n                <div class=\"p-dialog-header\">\n                    <span class=\"p-dialog-title\" *ngIf=\"option('header')\">{{option('header')}}</span>\n                    <div class=\"p-dialog-header-icons\">\n                        <button *ngIf=\"closable\" type=\"button\" [ngClass]=\"{'p-dialog-header-icon p-dialog-header-close p-link':true}\" (click)=\"close($event)\" (keydown.enter)=\"close($event)\">\n                            <span class=\"pi pi-times\"></span>\n                        </button>\n                    </div>\n                </div>\n                <div #content class=\"p-dialog-content\">\n                    <i [ngClass]=\"'p-confirm-dialog-icon'\" [class]=\"option('icon')\" *ngIf=\"option('icon')\"></i>\n                    <span class=\"p-confirm-dialog-message\" [innerHTML]=\"option('message')\"></span>\n                </div>\n                <div class=\"p-dialog-footer\" *ngIf=\"footer || footerTemplate\">\n                    <ng-content select=\"p-footer\"></ng-content>\n                    <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\n                </div>\n                <div class=\"p-dialog-footer\" *ngIf=\"!footer\">\n                    <button type=\"button\" pButton [icon]=\"option('acceptIcon')\" [label]=\"option('acceptLabel')\" (click)=\"accept()\" [ngClass]=\"'p-confirm-dialog-accept'\" [class]=\"option('acceptButtonStyleClass')\" *ngIf=\"option('acceptVisible')\"></button>\n                    <button type=\"button\" pButton [icon]=\"option('rejectIcon')\" [label]=\"option('rejectLabel')\" (click)=\"reject()\" [ngClass]=\"'p-confirm-dialog-reject'\" [class]=\"option('rejectButtonStyleClass')\" *ngIf=\"option('rejectVisible')\"></button>\n                </div>\n            </div>\n        </div>\n    `,\n    animations: [\n        trigger('animation', [\n            transition('void => visible', [\n                useAnimation(showAnimation)\n            ]),\n            transition('visible => void', [\n                useAnimation(hideAnimation)\n            ])\n        ])\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['../dialog/dialog.css']\n})\nexport class ConfirmDialog implements AfterContentInit,OnDestroy {\n\n    @Input() header: string;\n\n    @Input() icon: string;\n\n    @Input() message: string;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() maskStyleClass: string;\n\n    @Input() acceptIcon: string = 'pi pi-check';\n\n    @Input() acceptLabel: string = 'Yes';\n\n    @Input() acceptVisible: boolean = true;\n\n    @Input() rejectIcon: string = 'pi pi-times';\n\n    @Input() rejectLabel: string = 'No';\n\n    @Input() rejectVisible: boolean = true;\n\n    @Input() acceptButtonStyleClass: string;\n\n    @Input() rejectButtonStyleClass: string;\n\n    @Input() closeOnEscape: boolean = true;\n\n    @Input() blockScroll: boolean = true;\n\n    @Input() rtl: boolean;\n\n    @Input() closable: boolean = true;\n\n    @Input() appendTo: any;\n\n    @Input() key: string;\n\n    @Input() autoZIndex: boolean = true;\n\n    @Input() baseZIndex: number = 0;\n\n    @Input() transitionOptions: string = '150ms cubic-bezier(0, 0, 0.2, 1)';\n\n    @Input() focusTrap: boolean = true;\n\n    @Input() defaultFocus: string = 'accept';\n\n    @Input() get visible(): any {\n        return this._visible;\n    }\n    set visible(value:any) {\n        this._visible = value;\n\n        if (this._visible && !this.maskVisible) {\n            this.maskVisible = true;\n        }\n\n        this.cd.markForCheck();\n    }\n\n    @Input() get position(): string {\n        return this._position;\n    };\n\n    set position(value: string) {\n        this._position = value;\n\n        switch (value) {\n            case 'topleft':\n            case 'bottomleft':\n            case 'left':\n                this.transformOptions = \"translate3d(-100%, 0px, 0px)\";\n            break;\n            case 'topright':\n            case 'bottomright':\n            case 'right':\n                this.transformOptions = \"translate3d(100%, 0px, 0px)\";\n            break;\n            case 'bottom':\n                this.transformOptions = \"translate3d(0px, 100%, 0px)\";\n            break;\n            case 'top':\n                this.transformOptions = \"translate3d(0px, -100%, 0px)\";\n            break;\n            default:\n                this.transformOptions = \"scale(0.7)\";\n            break;\n        }\n    }\n\n    @ContentChild(Footer) footer;\n\n    @ViewChild('content') contentViewChild: ElementRef;\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'footerTemplate':\n                    this.footerTemplate = item.template;\n                break;\n            }\n        });\n    }\n\n    footerTemplate: TemplateRef<any>;\n\n    confirmation: Confirmation;\n\n    _visible: boolean;\n\n    maskVisible: boolean;\n\n    documentEscapeListener: any;\n\n    container: HTMLDivElement;\n\n    wrapper: HTMLElement;\n\n    contentContainer: HTMLDivElement;\n\n    subscription: Subscription;\n\n    preWidth: number;\n\n    _position: string = \"center\";\n\n    transformOptions: any = \"scale(0.7)\";\n\n    confirmationOptions: Confirmation;\n\n    constructor(public el: ElementRef, public renderer: Renderer2, private confirmationService: ConfirmationService, public zone: NgZone, private cd: ChangeDetectorRef) {\n        this.subscription = this.confirmationService.requireConfirmation$.subscribe(confirmation => {\n            if (!confirmation) {\n                this.hide();\n                return;\n            }\n\n            if (confirmation.key === this.key) {\n                this.confirmation = confirmation;\n                this.confirmationOptions = {\n                    message: this.confirmation.message||this.message,\n                    icon: this.confirmation.icon||this.icon,\n                    header: this.confirmation.header||this.header,\n                    rejectVisible: this.confirmation.rejectVisible == null ? this.rejectVisible : this.confirmation.rejectVisible,\n                    acceptVisible: this.confirmation.acceptVisible == null ? this.acceptVisible : this.confirmation.acceptVisible,\n                    acceptLabel: this.confirmation.acceptLabel||this.acceptLabel,\n                    rejectLabel: this.confirmation.rejectLabel||this.rejectLabel,\n                    acceptIcon: this.confirmation.acceptIcon || this.acceptIcon,\n                    rejectIcon: this.confirmation.rejectIcon || this.rejectIcon,\n                    acceptButtonStyleClass: this.confirmation.acceptButtonStyleClass || this.acceptButtonStyleClass,\n                    rejectButtonStyleClass: this.confirmation.rejectButtonStyleClass || this.rejectButtonStyleClass,\n                    defaultFocus: this.confirmation.defaultFocus || this.defaultFocus,\n                    blockScroll: (this.confirmation.blockScroll === false || this.confirmation.blockScroll === true) ? this.confirmation.blockScroll : this.blockScroll\n                };\n\n                if (this.confirmation.accept) {\n                    this.confirmation.acceptEvent = new EventEmitter();\n                    this.confirmation.acceptEvent.subscribe(this.confirmation.accept);\n                }\n\n                if (this.confirmation.reject) {\n                    this.confirmation.rejectEvent = new EventEmitter();\n                    this.confirmation.rejectEvent.subscribe(this.confirmation.reject);\n                }\n\n                this.visible = true;\n            }\n        });\n    }\n\n    option(name: string) {\n        const source = this.confirmationOptions || this;\n        if (source.hasOwnProperty(name)) {\n            return source[name];\n        }\n        return undefined;\n    }\n\n    onAnimationStart(event: AnimationEvent) {\n        switch(event.toState) {\n            case 'visible':\n                this.container = event.element;\n                this.wrapper = this.container.parentElement;\n                this.contentContainer = DomHandler.findSingle(this.container, '.p-dialog-content');\n\n                const element = this.getElementToFocus();\n                if (element) {\n                    element.focus();\n                }\n\n                this.appendContainer();\n                this.moveOnTop();\n                this.bindGlobalListeners();\n                this.enableModality();\n            break;\n        }\n    }\n\n    onAnimationEnd(event: AnimationEvent) {\n        switch(event.toState) {\n            case 'void':\n                this.onOverlayHide();\n            break;\n        }\n    }\n\n    getElementToFocus() {\n        switch(this.option('defaultFocus')) {\n            case 'accept':\n                return DomHandler.findSingle(this.container, '.p-confirm-dialog-accept');\n\n            case 'reject':\n                return DomHandler.findSingle(this.container, '.p-confirm-dialog-reject');\n\n            case 'close':\n                return DomHandler.findSingle(this.container, '.p-dialog-header-close');\n\n            case 'none':\n                return null;\n\n            //backward compatibility\n            default:\n                return DomHandler.findSingle(this.container, '.p-confirm-dialog-accept');\n        }\n    }\n\n    appendContainer() {\n        if (this.appendTo) {\n            if (this.appendTo === 'body')\n                document.body.appendChild(this.wrapper);\n            else\n                DomHandler.appendChild(this.wrapper, this.appendTo);\n        }\n    }\n\n    restoreAppend() {\n        if (this.wrapper && this.appendTo) {\n            this.el.nativeElement.appendChild(this.wrapper);\n        }\n    }\n\n    enableModality() {\n        if (this.option('blockScroll')) {\n            DomHandler.addClass(document.body, 'p-overflow-hidden');\n        }\n    }\n\n    disableModality() {\n        this.maskVisible = false;\n\n        if (this.option('blockScroll')) {\n            DomHandler.removeClass(document.body, 'p-overflow-hidden');\n        }\n\n        if (this.container) {\n            this.cd.detectChanges();\n        }\n    }\n\n    close(event: Event) {\n        if (this.confirmation.rejectEvent) {\n            this.confirmation.rejectEvent.emit();\n        }\n\n        this.hide();\n        event.preventDefault();\n    }\n\n    hide() {\n        this.visible = false;\n        this.confirmation = null;\n        this.confirmationOptions = null;\n    }\n\n    moveOnTop() {\n        if (this.autoZIndex) {\n            this.container.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n            this.wrapper.style.zIndex = String(this.baseZIndex + (DomHandler.zindex - 1));\n        }\n    }\n\n    getMaskClass() {\n        let maskClass = {'p-dialog-mask p-component-overlay': true, 'p-dialog-mask-scrollblocker': this.blockScroll};\n        maskClass[this.getPositionClass().toString()] = true;\n        return maskClass;\n    }\n\n    getPositionClass() {\n        const positions = ['left', 'right', 'top', 'topleft', 'topright', 'bottom', 'bottomleft', 'bottomright'];\n        const pos = positions.find(item => item === this.position);\n\n        return pos ? `p-dialog-${pos}` : '';\n    }\n\n    bindGlobalListeners() {\n        if ((this.closeOnEscape && this.closable) || this.focusTrap && !this.documentEscapeListener) {\n            const documentTarget: any = this.el ? this.el.nativeElement.ownerDocument : 'document';\n\n            this.documentEscapeListener = this.renderer.listen(documentTarget, 'keydown', (event) => {\n                if (event.which == 27 && (this.closeOnEscape && this.closable)) {\n                    if (parseInt(this.container.style.zIndex) === (DomHandler.zindex + this.baseZIndex) && this.visible)Â {\n                        this.close(event);\n                    }\n                }\n\n                if (event.which === 9 && this.focusTrap) {\n                    event.preventDefault();\n\n                    let focusableElements = DomHandler.getFocusableElements(this.container);\n\n                    if (focusableElements && focusableElements.length > 0) {\n                        if (!focusableElements[0].ownerDocument.activeElement) {\n                            focusableElements[0].focus();\n                        }\n                        else {\n                            let focusedIndex = focusableElements.indexOf(focusableElements[0].ownerDocument.activeElement);\n\n                            if (event.shiftKey) {\n                                if (focusedIndex == -1 || focusedIndex === 0)\n                                    focusableElements[focusableElements.length - 1].focus();\n                                else\n                                    focusableElements[focusedIndex - 1].focus();\n                            }\n                            else {\n                                if (focusedIndex == -1 || focusedIndex === (focusableElements.length - 1))\n                                    focusableElements[0].focus();\n                                else\n                                    focusableElements[focusedIndex + 1].focus();\n                            }\n                        }\n                    }\n                }\n            });\n        }\n    }\n\n    unbindGlobalListeners() {\n        if (this.documentEscapeListener) {\n            this.documentEscapeListener();\n            this.documentEscapeListener = null;\n        }\n    }\n\n    onOverlayHide() {\n        this.disableModality();\n        this.unbindGlobalListeners();\n        this.container = null;\n    }\n\n    ngOnDestroy() {\n        this.restoreAppend();\n        this.onOverlayHide();\n        this.subscription.unsubscribe();\n    }\n\n    accept() {\n        if (this.confirmation.acceptEvent) {\n            this.confirmation.acceptEvent.emit();\n        }\n\n        this.hide();\n    }\n\n    reject() {\n        if (this.confirmation.rejectEvent) {\n            this.confirmation.rejectEvent.emit();\n        }\n\n        this.hide();\n    }\n}\n\n@NgModule({\n    imports: [CommonModule,ButtonModule],\n    exports: [ConfirmDialog,ButtonModule,SharedModule],\n    declarations: [ConfirmDialog]\n})\nexport class ConfirmDialogModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}